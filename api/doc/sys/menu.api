syntax = "v1"
import "../resp.api"
type findAuthMenuReq struct {
    FName string `json:"name"`
}
type findAuthMenuResp {
    FID int64 `json:"id"`
    FName string `json:"name"`
    FParentId int64 `json:"parentId"`
    FUrl string `json:"url"`
    FPerms string `json:"perms"`
    FType int64 `json:"type"`
    FIcon string `json:"icon"`
    FOrderNum int64 `json:"orderNum"`
    FVuePath string `json:"vuePath"`
    FVueComponent string `json:"vueComponent"`
    FVueRedirect string `json:"vueRedirect"`
}
type AddAuthMenuReq struct {
    FName string `json:"name"`                                   // 菜单名称
    FParentId int64 `json:"parentId,optional"`                   // 父菜单ID，一级菜单为0
    FUrl string `json:"url,optional"`                            // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
    FPerms string `json:"perms,optional"`                        // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
    FType int64 `json:"type,optional"`                           // 类型   0：目录   1：菜单   2：按钮
    FIcon string `json:"icon,optional"`                          // 菜单图标
    FOrderNum int64 `json:"orderNum,optional"`                   // 排序
    FVuePath string `json:"vuePath,optional"`                    // vue系统的path
    FVueComponent string `json:"vueComponent,optional"`          // vue的页面
    FVueRedirect string `json:"vueRedirect,optional"`            // vue的路由重定向
}
type DeleteAuthMenuReq struct {
    id []int64 `json:"id"`
}
@server(
    group : sys/menu
    prefix : sys/menu
)
service api-api {
    @handler addMenu
    post /add (AddAuthMenuReq) returns (ResultResponse)
    @handler findAuthMenu
    post /find (findAuthMenuReq) returns (ResultResponse)
    @handler deleteMenu
    post /delete (DeleteAuthMenuReq) returns (ResultResponse)
}

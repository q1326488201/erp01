// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	sysrole "app/api/internal/handler/sys/role"
	sysuser "app/api/internal/handler/sys/user"
	sysuserole "app/api/internal/handler/sys/userole"
	"app/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/test",
				Handler: testHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: sysuser.AddUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/find",
				Handler: sysuser.FindUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: sysuser.UpdateUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: sysuser.DeleteUserHandler(serverCtx),
			},
		},
		rest.WithPrefix("/sys/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: sysrole.AddRoleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/find",
				Handler: sysrole.FindRoleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: sysrole.UpdateRoleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: sysrole.DeleteRoleHandler(serverCtx),
			},
		},
		rest.WithPrefix("/sys/role"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: sysuserole.AddUseroleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: sysuserole.DeleteUseroleHandler(serverCtx),
			},
		},
		rest.WithPrefix("/sys/userole"),
	)
}
